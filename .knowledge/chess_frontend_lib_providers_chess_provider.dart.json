{"is_source_file": true, "format": "Dart", "description": "This file defines the ChessProvider class, a state management component for a chess game frontend built with Flutter. It manages game state, timers, move history, and interactions with the chess engine.", "external_files": ["package:flutter/material.dart", "package:chess_frontend/utils/chess_engine.dart"], "external_methods": ["ChangeNotifier.notifyListeners()", "Timer.periodic()", "Timer.cancel()", "Duration()"], "published": ["ChessProvider"], "classes": [{"name": "ChessProvider", "description": "A ChangeNotifier class that manages the state of a chess game, including timers, move history, and game status."}], "methods": [{"name": "ChessProvider", "description": "Constructor initializing timers and setting up initial game state."}, {"name": "engine", "description": "Getter for the ChessEngine instance."}, {"name": "moveHistory", "description": "Getter returning the move history from the engine."}, {"name": "whiteTime", "description": "Getter for the remaining time of the white player."}, {"name": "blackTime", "description": "Getter for the remaining time of the black player."}, {"name": "isWhiteActive", "description": "Getter indicating if it's White's turn."}, {"name": "isGameOver", "description": "Getter indicating if the game has ended."}, {"name": "gameResult", "description": "Getter returning the current game result."}, {"name": "startTimer", "description": "Starts the timer for the active player, managing game over conditions."}, {"name": "stopTimers", "description": "Stops both timers."}, {"name": "resetTimers", "description": "Resets both players' timers to initial durations."}, {"name": "switchTurn", "description": "Switches active player and starts the corresponding timer."}, {"name": "makeMove", "description": "Handles a move from a position to another, updates game state, and checks for game over conditions."}, {"name": "undo", "description": "Undoes the last move and restores timers."}, {"name": "restart", "description": "Restarts the game and resets timers."}], "calls": ["stopTimers()", "notifyListeners()", "move()", "isGameOver()", "undo()", "getGameResult()"], "search-terms": ["ChessProvider", "Timer management in Flutter", "ChessEngine interaction", "move handling", "state management"], "state": 2, "file_id": 20, "knowledge_revision": 43, "git_revision": "", "hash": "85788b7eb8e4c859bec9d0e3795f653d", "format-version": 4, "code-base-name": "chess_frontend", "filename": "chess_frontend/lib/providers/chess_provider.dart", "revision_history": [{"43": ""}]}