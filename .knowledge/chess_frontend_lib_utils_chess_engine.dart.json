{"is_source_file": true, "format": "Dart", "description": "This Dart source file implements a minimal chess engine, including definitions for chess pieces, moves, game rules, and game state management. It provides functionality for making and undoing moves, checking game over conditions, and initializing the chessboard.", "external_files": [], "external_methods": ["dart:math:sign"], "published": ["ChessEngine"], "classes": [{"name": "ChessPiece", "description": "Represents a chess piece with type, color, and move status."}, {"name": "Move", "description": "Represents a move in the chess game, including source and destination positions, captured piece, and notation."}, {"name": "ChessEngine", "description": "Main class implementing game logic, state, move validation, move history, and game over detection."}], "methods": [{"name": "move", "description": "Attempts to perform a move from source to destination; updates board state, move history, and turn."}, {"name": "undo", "description": "Reverts the last move made in the game, restoring the previous state."}, {"name": "isGameOver", "description": "Checks if the game has ended based on king presence or move count."}, {"name": "getGameResult", "description": "Returns the game outcome as a string (e.g., 'White wins', 'Black wins', 'Draw')."}], "calls": ["dart:math:sign"], "search-terms": ["chess engine", "move validation", "chessboard initialization", "game over detection", "move history", "undo move", "piece types", "chess rules"], "state": 2, "file_id": 21, "knowledge_revision": 44, "git_revision": "", "hash": "10d81603518d5bff1fdf2e645e1b4557", "format-version": 4, "code-base-name": "chess_frontend", "filename": "chess_frontend/lib/utils/chess_engine.dart", "revision_history": [{"44": ""}]}